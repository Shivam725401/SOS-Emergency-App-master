// Generated by view binder compiler. Do not edit!
package com.example.sos.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.sos.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityHomeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialCardView Info;

  @NonNull
  public final MaterialCardView btnSosService;

  @NonNull
  public final MaterialCardView editMessage;

  @NonNull
  public final MaterialCardView helpline;

  @NonNull
  public final Button lanchang;

  @NonNull
  public final Button login;

  @NonNull
  public final MaterialCardView registerContact;

  @NonNull
  public final MaterialCardView showContact;

  @NonNull
  public final MaterialCardView sosguid;

  private ActivityHomeBinding(@NonNull ConstraintLayout rootView, @NonNull MaterialCardView Info,
      @NonNull MaterialCardView btnSosService, @NonNull MaterialCardView editMessage,
      @NonNull MaterialCardView helpline, @NonNull Button lanchang, @NonNull Button login,
      @NonNull MaterialCardView registerContact, @NonNull MaterialCardView showContact,
      @NonNull MaterialCardView sosguid) {
    this.rootView = rootView;
    this.Info = Info;
    this.btnSosService = btnSosService;
    this.editMessage = editMessage;
    this.helpline = helpline;
    this.lanchang = lanchang;
    this.login = login;
    this.registerContact = registerContact;
    this.showContact = showContact;
    this.sosguid = sosguid;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Info;
      MaterialCardView Info = ViewBindings.findChildViewById(rootView, id);
      if (Info == null) {
        break missingId;
      }

      id = R.id.btnSosService;
      MaterialCardView btnSosService = ViewBindings.findChildViewById(rootView, id);
      if (btnSosService == null) {
        break missingId;
      }

      id = R.id.editMessage;
      MaterialCardView editMessage = ViewBindings.findChildViewById(rootView, id);
      if (editMessage == null) {
        break missingId;
      }

      id = R.id.helpline;
      MaterialCardView helpline = ViewBindings.findChildViewById(rootView, id);
      if (helpline == null) {
        break missingId;
      }

      id = R.id.lanchang;
      Button lanchang = ViewBindings.findChildViewById(rootView, id);
      if (lanchang == null) {
        break missingId;
      }

      id = R.id.login;
      Button login = ViewBindings.findChildViewById(rootView, id);
      if (login == null) {
        break missingId;
      }

      id = R.id.registerContact;
      MaterialCardView registerContact = ViewBindings.findChildViewById(rootView, id);
      if (registerContact == null) {
        break missingId;
      }

      id = R.id.showContact;
      MaterialCardView showContact = ViewBindings.findChildViewById(rootView, id);
      if (showContact == null) {
        break missingId;
      }

      id = R.id.sosguid;
      MaterialCardView sosguid = ViewBindings.findChildViewById(rootView, id);
      if (sosguid == null) {
        break missingId;
      }

      return new ActivityHomeBinding((ConstraintLayout) rootView, Info, btnSosService, editMessage,
          helpline, lanchang, login, registerContact, showContact, sosguid);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
